{"version":3,"sources":["components/SuperChart.js","components/Footer.js","components/LeftInfo.js","components/SspButton.js","components/InfoText.js","App.js","serviceWorker.js","index.js"],"names":["SuperChart","props","createChart","sunburstData","id","width","Math","min","document","getElementById","offsetWidth","radius","arcRadius","cfg","w","h","margin","top","right","bottom","left","levels","maxValue","labelFactor","wrapWidth","opacityArea","dotRadius","opacityCircles","strokeWidth","roundStrokes","color","d","colorRadar","format","d3","unit","legend","title","translateX","translateY","arc","startAngle","x0","endAngle","x1","padAngle","padRadius","innerRadius","y0","outerRadius","max","y1","root","data","sum","value","sort","a","b","size","PI","height","partition","each","current","target","radarData","rootToRadarData","j","length","i","axes","name","getMax","allAxis","map","axis","total","angleSlice","rScale","range","domain","svgParent","select","remove","svg","append","attr","g","filter","feMerge","selectAll","offset","enter","axisGrid","reverse","style","cos","HALF_PI","sin","radarLine","curve","angle","radarWrapper","updateBlobs","text","parent","datum","on","p","clicked","path","descendants","slice","join","depth","arcVisible","children","label","labelVisible","labelTransform","updateState","t","transition","duration","tween","this","getAttribute","attrTween","call","update","exit","buttons","active","x","y","outData","push","isChildVisible","drawNewBlobs","removeOldBlobs","node","state","className","display","React","Component","Footer","Container","fluid","Row","paddingRight","Col","fontSize","LeftInfo","SspButton","md","lg","onClick","updateButton","fullname","InfoText","item","App","updateButtons","buttonName","setState","updateSelectCategory","categorySelected","makeButtons","key","infoText","sm","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7a23eb3b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport root from \"../fullData.json\";\r\nimport \"../style/sunburst.css\";\r\n\r\nclass SuperChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.drawNewBlobs = () => {};\r\n    this.removeOldBlobs = () => {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createChart(root, \".superChart\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.removeOldBlobs();\r\n    this.drawNewBlobs(this.props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"superChart\"\r\n        className=\"superChart\"\r\n        style={{ display: \"inline-flex\", width: \"95%\", margin: \"auto\" }}></div>\r\n    );\r\n  }\r\n  createChart = (sunburstData, id) => {\r\n    let width = Math.min(document.getElementById(\"superChart\").offsetWidth, 710);\r\n    let radius = width / 3.4;\r\n    let arcRadius = width / 20;\r\n    const cfg = {\r\n      w: width, //Width of the circle\r\n      h: width, //Height of the circle\r\n      radius: radius,\r\n      margin: { top: 0, right: 0, bottom: 0, left: 0 }, //The margins of the SVG\r\n      levels: 3, //How many levels or inner circles should there be drawn\r\n      maxValue: 10, //What is the value that the biggest circle will represent\r\n      labelFactor: 1.25, //How much farther than the radius of the outer circle should the labels be placed\r\n      wrapWidth: 30, //The number of pixels after which a label needs to be given a new line\r\n      opacityArea: 0.15, //The opacity of the area of the blob\r\n      dotRadius: 2, //The size of the colored circles of each blog\r\n      opacityCircles: 0.1, //The opacity of the circles of each blob\r\n      strokeWidth: 2, //The width of the stroke around each blob\r\n      roundStrokes: true, //If true the area and stroke will follow a round path (cardinal-closed)\r\n      color: (d) => {\r\n        return d === \"Greatest concern\"\r\n          ? \"#660000\"\r\n          : d === \"Mild concern\"\r\n          ? \"#664934\"\r\n          : d === \"Improving\"\r\n          ? \"#30661a\"\r\n          : d === \"Currently trade driven\"\r\n          ? \"#414566\"\r\n          : \"gray\";\r\n      },\r\n      colorRadar: (d) => {\r\n        return d === \"ssp1\"\r\n          ? \"#4a8422\"\r\n          : d === \"ssp2\"\r\n          ? \"#2f6da4\"\r\n          : d === \"ssp3\"\r\n          ? \"#c55a11\"\r\n          : d === \"ssp4\"\r\n          ? \"#d29500\"\r\n          : d === \"ssp5\"\r\n          ? \"#66547f\"\r\n          : \"gray\";\r\n      },\r\n      format: d3.format(\".1f\"),\r\n      unit: \"\",\r\n      legend: { title: \"Scenario\", translateX: 200, translateY: 40 },\r\n      arc: d3\r\n        .arc()\r\n        .startAngle((d) => d.x0)\r\n        .endAngle((d) => d.x1)\r\n        .padAngle((d) => Math.min((d.x1 - d.x0) / 2, 0.005))\r\n        .padRadius(radius * 1.5)\r\n        .innerRadius((d) => d.y0 * arcRadius + radius)\r\n        .outerRadius((d) => Math.max(d.y0 * arcRadius, d.y1 * arcRadius - 1) + radius),\r\n    };\r\n    // prepare categories data\r\n    const root = partition(sunburstData);\r\n    root.each((d) => {\r\n      d.current = d;\r\n      d.target = d;\r\n    });\r\n\r\n    // prepare radar data\r\n    let radarData = rootToRadarData(root);\r\n    let maxValue = cfg.maxValue > 0 ? cfg.maxValue : getMax(radarData);\r\n    let allAxis = radarData[0].axes.map((i, j) => i.axis), //Names of each axis\r\n      total = allAxis.length, //The number of different axes\r\n      angleSlice = (Math.PI * 2) / total; //The width in radians of each \"slice\"\r\n\r\n    //Scale for the radius\r\n    const rScale = d3.scaleLinear().range([0, radius]).domain([0, maxValue]);\r\n\r\n    const svgParent = d3.select(id);\r\n\r\n    svgParent.select(\"svg\").remove();\r\n\r\n    //Initiate the radar chart SVG\r\n    let svg = svgParent\r\n      .append(\"svg\")\r\n      .attr(\"width\", cfg.w + cfg.margin.left + cfg.margin.right)\r\n      .attr(\"height\", cfg.h + cfg.margin.top + cfg.margin.bottom);\r\n\r\n    //Append a g element\r\n    let g = svg\r\n      .append(\"g\")\r\n      .attr(\r\n        \"transform\",\r\n        \"translate(\" +\r\n          (cfg.w / 2 + cfg.margin.left) +\r\n          \",\" +\r\n          (cfg.h / 2 + cfg.margin.top) +\r\n          \")\"\r\n      );\r\n\r\n    let filter = g.append(\"defs\").append(\"filter\").attr(\"id\", \"glow\"),\r\n      feGaussianBlur = filter\r\n        .append(\"feGaussianBlur\")\r\n        .attr(\"stdDeviation\", \"2.5\")\r\n        .attr(\"result\", \"coloredBlur\"),\r\n      feMerge = filter.append(\"feMerge\"),\r\n      feMergeNode_1 = feMerge.append(\"feMergeNode\").attr(\"in\", \"coloredBlur\"),\r\n      feMergeNode_2 = feMerge.append(\"feMergeNode\").attr(\"in\", \"SourceGraphic\");\r\n\r\n    var defs = svg.append(\"defs\");\r\n\r\n    //Create a radial Sun-like gradient\r\n    defs\r\n      .append(\"radialGradient\")\r\n      .attr(\"id\", \"sun-gradient\")\r\n      .attr(\"cx\", \"50%\") //not really needed, since 50% is the default\r\n      .attr(\"cy\", \"50%\") //not really needed, since 50% is the default\r\n      .attr(\"r\", \"50%\") //not really needed, since 50% is the default\r\n      .selectAll(\"stop\")\r\n      .data([\r\n        { offset: \"0%\", color: \"#99d1da\" },\r\n        { offset: \"85%\", color: \"#173270\" },\r\n        { offset: \"100%\", color: \"#0e0e0e\" },\r\n      ])\r\n      .enter()\r\n      .append(\"stop\")\r\n      .attr(\"offset\", function (d) {\r\n        return d.offset;\r\n      })\r\n      .attr(\"stop-color\", function (d) {\r\n        return d.color;\r\n      });\r\n\r\n    //Wrapper for the grid & axes\r\n    let axisGrid = g.append(\"g\").attr(\"class\", \"axisWrapper\");\r\n\r\n    //Draw the background circles\r\n    axisGrid\r\n      .selectAll(\".levels\")\r\n      .data(d3.range(1, cfg.levels + 1).reverse())\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"class\", \"gridCircle\")\r\n      .attr(\"r\", (d) => (radius / cfg.levels) * d)\r\n      .style(\"fill\", \"none\")\r\n      .style(\"stroke\", \"#CDCDCD\")\r\n      .style(\"stroke-opacity\", cfg.opacityCircles);\r\n\r\n    /////////////////////////////////////////////////////////\r\n    //////////////////// Draw the axes //////////////////////\r\n    /////////////////////////////////////////////////////////\r\n\r\n    //Create the straight lines radiating outward from the center\r\n    var axis = axisGrid\r\n      .selectAll(\".axis\")\r\n      .data(allAxis)\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"axis\");\r\n    //Append the lines\r\n    axis\r\n      .append(\"line\")\r\n      .attr(\"x1\", 0)\r\n      .attr(\"y1\", 0)\r\n      .attr(\"x2\", (d, i) => rScale(maxValue * 1.1) * cos(angleSlice * i - HALF_PI))\r\n      .attr(\"y2\", (d, i) => rScale(maxValue * 1.1) * sin(angleSlice * i - HALF_PI))\r\n      .attr(\"class\", \"line\")\r\n      .style(\"stroke\", \"white\")\r\n      .style(\"stroke-opacity\", cfg.opacityCircles)\r\n      .style(\"stroke-width\", \"1px\");\r\n\r\n    /////////////////////////////////////////////////////////\r\n    ///////////// Draw the radar chart blobs ////////////////\r\n    /////////////////////////////////////////////////////////\r\n\r\n    //The radial line function\r\n    const radarLine = d3\r\n      .radialLine()\r\n      .curve(d3.curveLinearClosed)\r\n      .radius((d) => rScale(d.value))\r\n      .angle((d, i) => i * angleSlice + angleSlice / 2);\r\n\r\n    if (cfg.roundStrokes) {\r\n      radarLine.curve(d3.curveCardinalClosed);\r\n    }\r\n    let radarWrapper = g.append(\"g\").attr(\"class\", \"radarWrapper\");\r\n\r\n    updateBlobs(this.props);\r\n\r\n    ////////////////////////////////////////////////////\r\n    /////////Append food sufficiency legend///////////////\r\n    //////////////////////////////////////////////\r\n\r\n    //Wrapper for the grid & axes\r\n    let legend = g.append(\"g\").attr(\"class\", \"axisWrapper\");\r\n\r\n    //Text indicating at what each level is\r\n    legend\r\n      .selectAll(\".axisLabel\")\r\n      .data(d3.range(1, cfg.levels + 1).reverse())\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"axisLabel\")\r\n      .attr(\"x\", 4)\r\n      .attr(\"y\", (d) => (-d * radius) / cfg.levels)\r\n      .attr(\"dy\", \"0.4em\")\r\n      .style(\"font-size\", \"11px\")\r\n      .attr(\"fill\", \"white\")\r\n      .text((d) => cfg.format((maxValue * d) / cfg.levels) + cfg.unit);\r\n\r\n    // Append title food Sufficiency\r\n    legend\r\n      .selectAll(\".axisLabelMain\")\r\n      .data([\"Food Sufficiency\"])\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"axisLabelMain\")\r\n      .attr(\"x\", arcRadius)\r\n      .attr(\"y\", -5)\r\n      .attr(\"dy\", \"0.4em\")\r\n      .attr(\"transform\", \"rotate(-93)\")\r\n      .attr(\"fill\", \"white\")\r\n      .text((d) => d);\r\n\r\n    ////////////////////////////////////////////////////\r\n    /////////Create the arcs///////////////\r\n    //////////////////////////////////////////////\r\n    const parent = g\r\n      .append(\"circle\")\r\n      .datum(root)\r\n      .attr(\"id\", \"arcSelection\")\r\n      .attr(\"r\", cfg.radius + 3.5 * arcRadius)\r\n      .attr(\"pointer-events\", \"all\")\r\n      .attr(\"fill-opacity\", \"0.25\")\r\n      .on(\"click\", (p) => clicked(p, this.props))\r\n      .style(\"fill\", \"url(#sun-gradient)\");\r\n    let path = g\r\n      .append(\"g\")\r\n      .selectAll(\"path\")\r\n      .data(root.descendants().slice(1))\r\n      .join(\"path\")\r\n      .attr(\"fill\", (d) => {\r\n        while (d.depth > 1) d = d.parent;\r\n        return cfg.color(d.data.name);\r\n      })\r\n      .attr(\"fill-opacity\", (d) => (arcVisible(d.current) ? (d.children ? 0.6 : 0.4) : 0))\r\n      .attr(\"d\", (d) => cfg.arc(d.current));\r\n\r\n    path\r\n      .filter((d) => d.children)\r\n      .style(\"cursor\", \"pointer\")\r\n      .on(\"click\", (p) => clicked(p, this.props));\r\n\r\n    path.append(\"title\").text((d) => d.data.name + cfg.format(d.value));\r\n\r\n    const label = g\r\n      .append(\"g\")\r\n      .attr(\"pointer-events\", \"none\")\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"class\", \"legend\")\r\n      .style(\"font-size\", \"11px\")\r\n      .style(\"user-select\", \"none\")\r\n      .selectAll(\"text\")\r\n      .data(root.descendants().slice(1))\r\n      .join(\"text\")\r\n      .attr(\"dy\", \"0.35em\")\r\n      .attr(\"fill-opacity\", (d) => +labelVisible(d.current))\r\n      .attr(\"transform\", (d) => labelTransform(d.current))\r\n      .text((d) => d.data.name);\r\n\r\n    function clicked(p, props) {\r\n      parent.datum(p.parent || root);\r\n      props.updateState(p.data.name);\r\n      root.each((d) => {\r\n        d.target = {\r\n          x0: Math.max(0, Math.min(1, (d.x0 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n          x1: Math.max(0, Math.min(1, (d.x1 - p.x0) / (p.x1 - p.x0))) * 2 * Math.PI,\r\n          y0: Math.max(0, d.y0 - p.depth),\r\n          y1: Math.max(0, d.y1 - p.depth),\r\n        };\r\n      });\r\n      // update data for blobs\r\n      radarData = rootToRadarData(root);\r\n\r\n      const t = g.transition().duration(750);\r\n\r\n      // Transition the data on all arcs, even the ones that aren’t visible,\r\n      // so that if this transition is interrupted, entering arcs will start\r\n      // the next transition from the desired position.\r\n      path\r\n        .transition(t)\r\n        .tween(\"data\", (d) => {\r\n          const i = d3.interpolate(d.current, d.target);\r\n          return (t) => (d.current = i(t));\r\n        })\r\n        .filter(function (d) {\r\n          return +this.getAttribute(\"fill-opacity\") || arcVisible(d.target);\r\n        })\r\n        .attr(\"fill-opacity\", (d) =>\r\n          arcVisible(d.target) ? (d.children ? 0.6 : 0.4) : 0\r\n        )\r\n        .attrTween(\"d\", (d) => () => cfg.arc(d.current));\r\n\r\n      label\r\n        .filter(function (d) {\r\n          return +this.getAttribute(\"fill-opacity\") || labelVisible(d.target);\r\n        })\r\n        .transition(t)\r\n        .attr(\"fill-opacity\", (d) => +labelVisible(d.target))\r\n        .attrTween(\"transform\", (d) => () => labelTransform(d.current));\r\n\r\n      //// change radar\r\n\r\n      allAxis = radarData[0].axes.map((i, j) => i.axis); //Names of each axis\r\n      total = allAxis.length; //The number of different axes\r\n      angleSlice = (Math.PI * 2) / total; //The width in radians of each \"slice\"\r\n      updateBlobs(props);\r\n\r\n      let newAxis = axisGrid.selectAll(\".axis\").data(allAxis);\r\n\r\n      newAxis.join(\r\n        (enter) =>\r\n          enter\r\n            .append(\"g\")\r\n            .attr(\"class\", \"axis\")\r\n            .append(\"line\")\r\n            .attr(\"x1\", 0)\r\n            .attr(\"y1\", 0)\r\n            .attr(\"class\", \"line\")\r\n            .style(\"stroke\", \"white\")\r\n            .style(\"stroke-opacity\", cfg.opacityCircles)\r\n            .style(\"stroke-width\", \"1px\")\r\n            .call((enter) =>\r\n              enter\r\n                .transition(t)\r\n\r\n                .attr(\r\n                  \"x2\",\r\n                  (d, i) => rScale(maxValue * 1.1) * cos(angleSlice * i - HALF_PI)\r\n                )\r\n                .attr(\r\n                  \"y2\",\r\n                  (d, i) => rScale(maxValue * 1.1) * sin(angleSlice * i - HALF_PI)\r\n                )\r\n            ),\r\n        (update) =>\r\n          update.select(\"line\").call((update) =>\r\n            update\r\n              .transition(t)\r\n              .attr(\r\n                \"x2\",\r\n                (d, i) => rScale(maxValue * 1.1) * cos(angleSlice * i - HALF_PI)\r\n              )\r\n              .attr(\r\n                \"y2\",\r\n                (d, i) => rScale(maxValue * 1.1) * sin(angleSlice * i - HALF_PI)\r\n              )\r\n          ),\r\n        (exit) => exit.remove()\r\n      );\r\n    }\r\n\r\n    function updateBlobs(props) {\r\n      const t = g.transition().duration(750);\r\n      let data = radarData.filter((d) => {\r\n        return (\r\n          (d.name === \"current\" && props.buttons[0].active) ||\r\n          (d.name === \"ssp1\" && props.buttons[1].active) ||\r\n          (d.name === \"ssp2\" && props.buttons[2].active) ||\r\n          (d.name === \"ssp3\" && props.buttons[3].active) ||\r\n          (d.name === \"ssp4\" && props.buttons[4].active) ||\r\n          (d.name === \"ssp5\" && props.buttons[5].active)\r\n        );\r\n      });\r\n\r\n      //Create a wrapper for the blobs\r\n      const blobWrapper = radarWrapper.selectAll(\".radarArea\").data(data);\r\n\r\n      blobWrapper.join(\r\n        (enter) => {\r\n          enter\r\n            .append(\"g\")\r\n            .attr(\"class\", \"radarArea\")\r\n            .append(\"path\")\r\n            .style(\"fill\", (d, i) => cfg.colorRadar(d.name))\r\n            .style(\"fill-opacity\", cfg.opacityArea)\r\n            .style(\"stroke-width\", cfg.strokeWidth + \"px\")\r\n            .style(\"stroke\", (d, i) => cfg.colorRadar(d.name))\r\n            .style(\"filter\", \"url(#glow)\")\r\n            .call((enter) => enter.transition(t).attr(\"d\", (d) => radarLine(d.axes)));\r\n        },\r\n        (update) => {\r\n          update\r\n            .select(\"path\")\r\n            .call((update) => update.transition(t).attr(\"d\", (d) => radarLine(d.axes)));\r\n        }\r\n      );\r\n    }\r\n\r\n    function reDrawBlobs() {\r\n      radarWrapper.selectAll(\".radarArea\").remove();\r\n    }\r\n\r\n    this.drawNewBlobs = updateBlobs;\r\n    this.removeOldBlobs = reDrawBlobs;\r\n\r\n    function arcVisible(d) {\r\n      return d.y1 <= 3 && d.y0 >= 1 && d.x1 > d.x0;\r\n    }\r\n\r\n    function isChildVisible(d) {\r\n      return d.x1 - d.x0 > 0.001;\r\n    }\r\n\r\n    function labelVisible(d) {\r\n      return d.y1 <= 3 && d.y0 >= 1 && (d.y1 - d.y0) * (d.x1 - d.x0) > 0.2;\r\n    }\r\n\r\n    function labelTransform(d) {\r\n      const x = (((d.x0 + d.x1) / 2) * 180) / Math.PI;\r\n      const y = ((d.y0 + d.y1) / 2) * arcRadius + cfg.radius;\r\n      return `rotate(${x - 90}) translate(${y},0) rotate(${\r\n        x < 270 && x > 90 ? -90 : 90\r\n      })`;\r\n    }\r\n\r\n    function rootToRadarData(root) {\r\n      let outData = [];\r\n      outData.push({ name: \"current\", axes: [] });\r\n      outData.push({ name: \"ssp1\", axes: [] });\r\n      outData.push({ name: \"ssp2\", axes: [] });\r\n      outData.push({ name: \"ssp3\", axes: [] });\r\n      outData.push({ name: \"ssp4\", axes: [] });\r\n      outData.push({ name: \"ssp5\", axes: [] });\r\n      root.each((d) => {\r\n        if (!d.children && isChildVisible(d.target)) {\r\n          outData[0].axes.push({ axis: d.data.name, value: d.data.data[0] });\r\n          outData[1].axes.push({ axis: d.data.name, value: d.data.data[1] });\r\n          outData[2].axes.push({ axis: d.data.name, value: d.data.data[2] });\r\n          outData[3].axes.push({ axis: d.data.name, value: d.data.data[3] });\r\n          outData[4].axes.push({ axis: d.data.name, value: d.data.data[4] });\r\n          outData[5].axes.push({ axis: d.data.name, value: d.data.data[5] });\r\n        }\r\n      });\r\n      return outData;\r\n    }\r\n\r\n    return svg.node();\r\n  };\r\n}\r\n\r\nexport default SuperChart;\r\n\r\nconst sin = Math.sin;\r\nconst cos = Math.cos;\r\nconst HALF_PI = Math.PI / 2;\r\n\r\nfunction partition(data) {\r\n  const root = d3\r\n    .hierarchy(data)\r\n    .sum((d) => d.value)\r\n    .sort((a, b) => b.value - a.value);\r\n  return d3.partition().size([2 * Math.PI, root.height + 1])(root);\r\n}\r\n\r\nfunction getMax(data) {\r\n  let maxValue = 0;\r\n  for (let j = 0; j < data.length; j++) {\r\n    for (let i = 0; i < data[j].axes.length; i++) {\r\n      data[j].axes[i][\"id\"] = data[j].name;\r\n      if (data[j].axes[i][\"value\"] > maxValue) {\r\n        maxValue = data[j].axes[i][\"value\"];\r\n      }\r\n    }\r\n  }\r\n  return maxValue;\r\n}\r\n","import React from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <Container fluid={true} className={\"fixed-top position-absolute\"}>\r\n        <Row\r\n          className=\"p-0 bg-nav\"\r\n          style={{ height: \"3vh\", paddingRight: \" 0.5vh 1rem\" }}>\r\n          <Col className=\"d-flex justify-content-end\">\r\n            <p className=\"font-italic p-0 m-0 text-white\" style={{ fontSize: \"0.8rem\" }}>\r\n              Created by: Anna Häägg\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nclass LeftInfo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Col className=\"p-3 m-0\">\r\n        <h1 className=\"m-2\">Future Food Sufficiency</h1>\r\n        <h4 className=\"m-2\">\r\n          Producing sufficient food to meet rising demand is a precondition to food\r\n          security. We show the future caloric sufficiency considering population growth,\r\n          diets, and production driven by climate, agricultural management, and cropland\r\n          expansion under five combined climate change and socio-economic scenarios.\r\n          <br />\r\n          <br />\r\n          <br />\r\n          The graph shows that global caloric sufficiency is likely to decrease, despite\r\n          increased food production, because those gains are outweighed by population\r\n          growth and higher animal products consumption. At a national scale, caloric\r\n          sufficiency decreases consistently for most countries, the majority of the\r\n          countries facing hunger today remain vulnerable, and around 25 countries, mostly\r\n          in Africa, become more vulnerable.\r\n        </h4>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LeftInfo;\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nclass SspButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Col>\r\n        <Row className=\"d-flex justify-content-center\">\r\n          <Col\r\n            md={4}\r\n            lg={2}\r\n            onClick={() => this.props.updateButton(this.props.name)}\r\n            className={this.props.active ? \"p-1  sspButton sspActive\" : \"p-1  sspButton\"}\r\n            id={\"sspButton_\" + this.props.name}></Col>\r\n          <Col className=\"m-0 p-0\">\r\n            <h5>{this.props.fullname}</h5>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SspButton;\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nclass InfoText extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"infotext\" className=\"p-3\">\r\n        <h2>{this.props.item.title}</h2>\r\n        <h4 style={{ width: \"80%\" }}>{this.props.item.text}</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoText;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Row, Col, Container } from \"react-bootstrap\";\n\nimport SuperChart from \"./components/SuperChart\";\nimport Footer from \"./components/Footer\";\nimport LeftInfo from \"./components/LeftInfo\";\nimport SspButton from \"./components/SspButton\";\nimport InfoText from \"./components/InfoText\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttons: [\n        { name: 0, active: true, fullname: \"Current\" },\n        { name: 1, active: true, fullname: \"Sustainability\" },\n        { name: 2, active: false, fullname: \"Middle Of The Road\" },\n        { name: 3, active: false, fullname: \"Regional Rivalry\" },\n        { name: 4, active: false, fullname: \"Inequality\" },\n        { name: 5, active: false, fullname: \"Fossil-Fueled Development\" },\n      ],\n      infoText: [\n        { title: \"All Countries\", text: \"Select a category for more information\" },\n        { title: \"Greatest concern\", text: \"Select a category for more information\" },\n        {\n          title: \"Most vulnerable\",\n          text:\n            \"Low yields and increasing population: food demand consistently outweighs food supply.\",\n        },\n        {\n          title: \"Newly vulnerable\",\n          text:\n            \"Large population growth or an initial low sufficiency, combined with a decline in sufficiency leads these countries to become more vulnerable.\",\n        },\n        {\n          title: \"Currently trade driven\",\n          text: \"Select a category for more information\",\n        },\n        {\n          title: \"Exporters\",\n          text:\n            \"World food exporters’ caloric sufficiencies are declining while more countries are depending on them.\",\n        },\n        {\n          title: \"Importers\",\n          text:\n            \"These countries depend on exporters. Importers’ sufficiencies are low to begin with and decrease or remain low.\",\n        },\n        { title: \"Mild concern\", text: \"Select a category for more information\" },\n        {\n          title: \"Vulnerable but improving\",\n          text:\n            \"Few countries with low sufficiency are improving, thanks to cropland and/or productivity increase while population stagnates\",\n        },\n        {\n          title: \"Decreasing but not as vulnerable\",\n          text:\n            \"Many (mostly European) countries with higher income and food security see their caloric sufficiency decrease. More concerning, a few countries in Africa and SE Asia have declining sufficiencies, though it is variable across scenarios.\",\n        },\n        {\n          title: \"Highly variable\",\n          text:\n            \"High variability across scenarios suggest sensitivity to their differences (but finer modeling would be required to draw policy-relevant insights).\",\n        },\n        { title: \"Improving\", text: \"Select a category for more information\" },\n        {\n          title: \"Increasing sufficiency\",\n          text:\n            \"Cropland projected to increase, leading to caloric sufficiency increase. However, scenarios’ cropland expansion assumptions may be debatable and these results do not account for water scarcity.\",\n        },\n      ],\n      categorySelected: 0,\n    };\n  }\n\n  updateButtons = (buttonName) => {\n    let buttons = [...this.state.buttons];\n    buttons[buttonName].active = !buttons[buttonName].active;\n    this.setState({ buttons });\n  };\n\n  updateSelectCategory = (name) => {\n    switch (name) {\n      case \"Greatest concern\":\n        this.setState({ categorySelected: 1 });\n        break;\n      case \"Most vulnerable\":\n        this.setState({ categorySelected: 2 });\n        break;\n      case \"Newly vulnerable\":\n        this.setState({ categorySelected: 3 });\n        break;\n      case \"Currently trade driven\":\n        this.setState({ categorySelected: 4 });\n        break;\n      case \"Exporters\":\n        this.setState({ categorySelected: 5 });\n        break;\n      case \"Importers\":\n        this.setState({ categorySelected: 6 });\n        break;\n      case \"Mild concern\":\n        this.setState({ categorySelected: 7 });\n        break;\n      case \"Vulnerable but improving\":\n        this.setState({ categorySelected: 8 });\n        break;\n      case \"Decreasing but not as vulnerable\":\n        this.setState({ categorySelected: 9 });\n        break;\n      case \"Highly variable\":\n        this.setState({ categorySelected: 10 });\n        break;\n      case \"Improving\":\n        this.setState({ categorySelected: 11 });\n        break;\n      case \"Increasing sufficiency\":\n        this.setState({ categorySelected: 12 });\n        break;\n      default:\n        this.setState({ categorySelected: 0 });\n    }\n  };\n\n  render() {\n    return (\n      <Container className=\"p-0 \" fluid={true}>\n        <Row className=\"p-0 m-0\">\n          <Col md={3} sm={12}>\n            <LeftInfo />\n          </Col>\n          <Col md={9} sm={12} className=\"p-0 m-0\">\n            <Row className=\"p-0 m-0\">\n              <Col md={8} sm={12} className=\"p-0 m-0\" style={{ textAlign: \"center\" }}>\n                <SuperChart\n                  buttons={this.state.buttons}\n                  updateState={this.updateSelectCategory}\n                />\n                <Row className=\"m-0 p-1 d-flex justify-content-center\">\n                  <h4>Future scenarios</h4>\n                </Row>\n                <Row className=\"m-0 p-1 d-flex justify-content-center\">\n                  {this.makeButtons()}\n                </Row>\n              </Col>\n              <Col md={4} sm={12} className=\"m-0 p-0 d-flex align-items-center\">\n                <InfoText item={this.state.infoText[this.state.categorySelected]} />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n\n        <Footer></Footer>\n      </Container>\n    );\n  }\n  makeButtons = () => {\n    return this.state.buttons.map((item) => {\n      return (\n        <SspButton\n          updateButton={this.updateButtons}\n          name={item.name}\n          key={item.name}\n          fullname={item.fullname}\n          active={item.active}\n        />\n      );\n    });\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}